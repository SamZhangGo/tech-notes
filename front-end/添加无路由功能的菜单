# 添加无路由功能的菜单
### 功能场景描述
云办公3.1项目爱数云盘对接模块需要有一个管理员能够单点登录爱数云盘服务器的功能。
菜单名称为“云盘管理”，和终端管理同级，在和爱数服务器对接成功后，才会显示出来。
### 目前带路由菜单的实现
实现菜单动态添加的文件主要有
* router/index.js 配置菜单信息
* SidebarItem.vue 菜单页面呈现文件

实现一个不带路由的菜单，在路由配置文件中增加
```javascript
  {
    a: 'cloudDiskSync/getLoginUrl', //要跳转的路径
    name: 'cloudDiskManage',
    meta: { icon: 'cloud', title: 'cloudDiskManage' }
  },
```
在SidebarItem.vue文件，增加a标签来实现，这里不能用router-link标签来实现

```javascript
<template v-if="item.meta.hiddenAllChild ||  !item.children">
  <router-link v-waves style="display: block" v-if="item.path" :to="item.path"
               :key="item.name">
    <el-menu-item :index="item.path" class='submenu-title-noDropdown'>
      <template v-if="item.meta">
        <i v-if="item.meta.icon"
           :class="'fa '+ 'fa-'+ item.meta.icon || ''"></i>
        <span
          v-if="item.meta.title">{{generateTitle(item.meta.title)}}</span>
      </template>
    </el-menu-item>
  </router-link>
  <!--// 新增的用于处理a的分支-->
  <a v-else :href="'/web/' + item.a" target="_blank">
    <li :index="item.a" class='submenu-title-noDropdown el-menu-item'>
      <template v-if="item.meta">
        <i v-if="item.meta.icon"
           :class="'fa '+ 'fa-'+ item.meta.icon || ''"></i>
        <span
          v-if="item.meta.title">{{generateTitle(item.meta.title)}}</span>
      </template>
    </li>
  </a>
</template>
```
我们的routes来自getters.js
```javascript
<sidebar-item :routes="permission_routers"></sidebar-item>
export default {
   ...,
   computed: {
     ...mapGetters([
       'permission_routers',
       'sidebar'
     ]),
     ...
  },
  ...
}
```
在permission.js中，我们需要对routers的初始化逻辑进行改造
```javascript
const permission = {
  state: {
    routers: constantMenuRouterMap,
    addRouters: []
  },
  mutations: {
    SET_ROUTERS: (state, auth) => {
      //带路由的菜单
      state.addRouters = auth.routers
      //合并带路由的菜单和不带路由的菜单到最后传给页面的routers里
      state.routers = constantMenuRouterMap.concat(auth.menus)
    },
    //这个是菜单数据变化后，用于更新routers
    UPDATE_MENUS: (state, menus) => {
      state.routers = menus
    }
  },
  actions: {
    GenerateRoutes({ commit }, data) {
      return new Promise(resolve => {
        const { menu } = data
        //筛选出带路由的菜单
        const accessedRouters = filterAsyncRouter(asyncMenuRouterMap, menu)
        //筛选出不带路由的菜单
        const menus = filterAsyncRouter(asyncMenuRouterMap, menu, false)
        //调用mutations中定义的SET_ROUTERS方法
        commit('SET_ROUTERS', { routers: accessedRouters, menus })
        resolve()
      })
    },
    //更新不带路由的菜单
    UpdateMenus({ commit }, data) {
      const menus = filterAsyncRouter(asyncMenuRouterMap, data, false)
      commit('UPDATE_MENUS', menus)
    }
  }
}
//筛选带路由菜单或者不带路由菜单，用isRouter来控制，默认筛选带路由的菜单
function filterAsyncRouter(asyncMenuRouterMap, menus, isRouter = true) {
  const accessedRouters = asyncMenuRouterMap.filter(route => {
    if (hasPermission(menus, route)) {
      // 具备路由菜单功能
      if (isRouter ? route.path : !isRouter) {
        if (!route.noAuth && route.children && route.children.length) {
          route.children = filterAsyncRouter(route.children, menus)
        }
        return true
      }
    }
    return false
  })
  return accessedRouters
}
```
### 下面为具体业务相关，不感兴趣可忽略
爱数云盘对接成功后，需要将“云盘管理”菜单显示出来
```javascript
api.saveServerInfo(data).then((response) => {
  this.$emit('configsuccess')
  this.loading = false;
  this.eisooServer = response.data.data;
  this.menus.cloudDiskManage = true
  //更新不带路由控制的菜单
  this.$store.dispatch('UpdateMenus', this.menus)
}).catch(() => {
  this.loading = false;
  this.eisooServer = null;
});
```
点击“云盘管理” 会访问/web/cloudDiskSync/getLoginUrl
```java
@Controller
@RequestMapping("/cloudDiskSync")
public class CloudDiskSyncController {

    @Autowired
    private CloudDiskSyncService cloudDiskSyncService;

    // 这里需要get请求，直接返回String类型即可
    @RequestMapping(value = "/getLoginUrl", method = RequestMethod.GET)
    public String getLoginUrl() {
        EisooJsonHolder loginUrlObj = cloudDiskSyncService.getEisooLoginUrlForCurAdmin();
        if (loginUrlObj.containsErrcode()) {
            // 出现错误，直接跑异常，前端会显示通用的错误页面
            throw new RuntimeException("");
        } else {
            String userid = (String) loginUrlObj.getValueByKey("userid");
            String tokenid = (String) loginUrlObj.getValueByKey("tokenid");
            String ip = SyncTaskManager.getManager().getServerInfo().getIp();
            String loginUrl = String.format(UrlFormat.URL_FORMAT_HTTP_LOGIN, new Object[] {ip, userid, tokenid});
            //爱数云盘需要重定向
            return "redirect:"+loginUrl;
        }

    }
}
```
